{"version":3,"sources":["Clock components/Clock.jsx","App.js","reportWebVitals.js","index.js"],"names":["Clock","CurrentTime","setCurrentTime","useState","Date","toLocaleTimeString","hour12","setInterval","updateTime","React","createElement","className","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"+JA+EeA,MA1Ef,WA2BM,MAAOC,EAAaC,GAAkBC,oBAAS,IAAIC,MAAOC,mBAAmB,QAAQ,CAACC,QAAO,KAmCjG,OANEC,YArBkBC,KAElBN,GAAe,IAAIE,MAAOC,mBAAmB,QAAQ,CAACC,QAAO,MAmBrC,KAOxBG,IAAAC,cAAA,OAAKC,UAAU,aACXF,IAAAC,cAAA,UAAKT,KCxDEW,MAXf,WACE,OACEH,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,UAAQC,UAAU,cAChBF,IAAAC,cAACV,EAAK,SCMCa,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHrB,IAAAC,cAACD,IAAMsB,WAAU,KACftB,IAAAC,cAACE,EAAG,QAORC","file":"static/js/main.9fb5f44a.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n//This line imports React and the useState hook from the 'react' library. React is a JavaScript library for\r\n//building user interfaces, and useState is a hook that allows you to add state to your functional components.\r\n\r\n//Function Component\r\nfunction Clock() { //functional component named Clock.\r\n     //Initial Time Calculation:\r\n     \r\n    // let time = new Date().toLocaleTimeString();\r\n\r\n    //The new Date() function creates a new Date object, and the toLocaleTimeString() method\r\n    //returns the time in the local time zone, formatted according to the current locale.\r\n\r\n    //State Initialization:\r\n\r\n    // const [CurrentTime, setCurrentTime] = useState(time)\r\n    \r\n    /*\r\n    This initializes a state variable called CurrentTime with the initial value set to the current date string.\r\n     useState(time) returns an array with the current state value (CurrentTime) and a function to update this state\r\n      (setCurrentTime).\r\n    */\r\n\r\n      // const [CurrentTime, setCurrentTime] = useState(new Date().toLocaleTimeString());\r\n       /*\r\n    useState hook is used\r\n     to set the initial time to the current time. The useState hook returns an array with two\r\n     elements: the first element is the current state, and the second element is a function that\r\n     allows you to update the state. In this case, the state is the current time,\r\n     and the function is setTime, which updates the state to the current time.\r\n    */\r\n      // Improved State Initialization with AM/PM formatting:\r\n      const [CurrentTime, setCurrentTime] = useState(new Date().toLocaleTimeString('en-US',{hour12:true}));\r\n      /*\r\n  The useState hook is used to set the initial time to the current time, formatted to include AM/PM.\r\n  The useState hook returns an array with two elements: the first element is the current state,\r\n  and the second element is a function that allows you to update the state.\r\n  */\r\n   \r\n   //Function to update the time:\r\n   const updateTime = () => {\r\n    // setCurrentTime(new Date().toLocaleTimeString());\r\n    setCurrentTime(new Date().toLocaleTimeString('en-US',{hour12:true}));\r\n   }\r\n    \r\n  //The updateTime function sets the current time to the new current time, formatted with AM/PM.\r\n\r\n   //The updateTime function is called every second to update the time.\r\n\r\n      //Update Time Function:\r\n\r\n    // function updateTime() { \r\n    //     let newtime = new Date().toLocaleTimeString();\r\n    //     setCurrentTime(newtime)\r\n    //     }\r\n\r\n        //The updateTime function is called every second to update the current time.\r\n        //The newtime variable is set to the current time, and the setCurrentTime function is called\r\n        //to update the state variable CurrentTime with the new time.\r\n\r\n     // Set up interval to update time every second\r\n    setInterval(updateTime, 1000)\r\n     /*\r\n  The setInterval function is used to call the updateTime function every second (1000 milliseconds).\r\n  This updates the current time state every second.\r\n  */\r\n    \r\n  return (\r\n    <div className='container'>\r\n        <h1>{CurrentTime}</h1>\r\n        {/* <button onClick={updateTime}>Get Time</button> */}\r\n    </div>\r\n  )\r\n /*\r\n This returns a div element with a h1 element and a button element. The h1 element displays\r\n the current date, and the button element calls the updateTime function when clicked.\r\n */\r\n}\r\n\r\nexport default Clock //This exports the Clock component so that it can be used in other files.\r\n","import React from 'react'\nimport Clock from './Clock components/Clock'\nfunction App() {\n  return (\n    <div className='App'>\n      <header className=\"App-header\">\n        <Clock />\n      </header>\n      \n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport '../src/Style.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}